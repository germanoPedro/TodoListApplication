@page "/todo"

<h3>@HeaderName</h3>
<!--Edit form-->
<EditForm Model =  "task" class="form-inline" OnValidSubmit ="AddTask">
    <div class="btn-group mb-3">
    <input class="form-control mx-2" type = "text" @bind-value="task.TaskName" />
   <div class = "input-group-prepend">
    <button class="btn btn-outline-primary mx-2">Add Task</button>
    </div>
    </div>
</EditForm>
<div class="progress-bar my-2 mx-2" role = "progressbar" style ="width:@(PercentageCompleted)%" aria-valuemax="100" aria-valuemin="0">
    @(PercentageCompleted)%

</div>

<ul class = "list-group my-2">
    @foreach(var taskItem in taskList)
    {
    <!--Task Completed-->
        if(taskItem.IsComplete)
        {
    <li class = "list-group-item list-group-item-success mx-1" @onclick ="(()=> taskItem.IsComplete = !taskItem.IsComplete)">
        <del>
        @taskItem.TaskName
        </del>
    </li>
        }

        else{
    <!-- Task not Completed-->
    <li class = "list-group-item list-group-item-secondary mx-1" @onclick ="(()=> taskItem.IsComplete = !taskItem.IsComplete)">
        @taskItem.TaskName
    </li>
        }
    }
</ul>


@code {
    //c# code
    protected List<TaskModel> taskList = new List<TaskModel>();

    protected override void OnInitialized()
    {
        if (HeaderName == "")
        {
            HeaderName = "ToDo";
        }
    }


    [Parameter]
    public string HeaderName { get; set; }


    protected TaskModel task = new TaskModel();


    private void AddTask()
    {
        taskList.Add(task);
        task = new TaskModel();
    }
    public int PercentageCompleted 
        { get
            {
            return taskList.Count > 0 ? (taskList.Count(x=> x.IsComplete)*100/taskList.Count) : 0;
             }
    }

}
